{
  "Exports": {
    "Array": "array_{meta{\"array\", func(ø meta, i interface{}) bool { return ø.Is(reflect.Array, i) }}}",
    "Bool": "bool_{meta{\"bool\", func(ø meta, i interface{}) bool { return ø.Is(reflect.Bool, i) }}}",
    "CallMethod": "func (interface{},string,...interface{})",
    "Channel": "channel_{meta{\"channel\", func(ø meta, i interface{}) bool { return ø.Is(reflect.Chan, i) }}}",
    "Complex": "complex_{meta{\"complex\", func(ø meta, i interface{}) bool {\n\u0009return ø.Is(reflect.Complex128, i) ||\n\u0009\u0009ø.Is(reflect.Complex64, i)\n}}}",
    "Convert": "func (interface{},reflect.Type) interface{}",
    "DeReference": "func (interface{}) interface{}",
    "Defaults": "map[reflect.Type]interface{}{\n\u0009reflect.TypeOf(\"\"):\u0009\"\",\n\u0009reflect.TypeOf(int(0)):\u0009int(0),\n\u0009reflect.TypeOf(int32(0)):\u0009int32(0),\n\u0009reflect.TypeOf(int64(0)):\u0009int64(0),\n\u0009reflect.TypeOf(true):\u0009false,\n\u0009reflect.TypeOf(float32(0.0)):\u0009float32(0.0),\n\u0009reflect.TypeOf(float64(0.0)):\u0009float64(0.0),\n}",
    "Float": "float_{meta{\"float\", func(ø meta, i interface{}) bool {\n\u0009return ø.Is(reflect.Float64, i) ||\n\u0009\u0009ø.Is(reflect.Float32, i)\n}}}",
    "Func": "func_{meta{\"func\", func(ø meta, i interface{}) bool { return ø.Is(reflect.Func, i) }}}",
    "Inspect": "func (interface{}) string",
    "Int": "int_{meta{\"int\", func(ø meta, i interface{}) bool {\n\u0009return ø.Is(reflect.Int, i) ||\n\u0009\u0009ø.Is(reflect.Int8, i) ||\n\u0009\u0009ø.Is(reflect.Int16, i) ||\n\u0009\u0009ø.Is(reflect.Int32, i) ||\n\u0009\u0009ø.Is(reflect.Int64, i)\n}}}",
    "Is": "func (checker,interface{}) error",
    "IsDefault": "func (interface{}) bool",
    "Map": "map_{meta{\"map\", func(ø meta, i interface{}) bool { return ø.Is(reflect.Map, i) }}}",
    "Meta": "meta{}",
    "MustBe": "func (checker,interface{})",
    "New": "func (reflect.Type) interface{}",
    "NewByValue": "func (interface{}) interface{}",
    "Nil": "nil_{meta{\"nil\", func(ø meta, i interface{}) bool { return i == nil }}}",
    "P": "func (interface{})",
    "Panicf": "func (string,...interface{})",
    "Pointer": "pointer_{meta{\"pointer\", func(ø meta, i interface{}) bool {\n\u0009return ø.Is(reflect.Ptr, i) ||\n\u0009\u0009ø.Is(reflect.Uintptr, i) ||\n\u0009\u0009ø.Is(reflect.UnsafePointer, i)\n}}}",
    "Replace": "func (interface{},interface{})",
    "Slice": "slice_{meta{\"slice\", func(ø meta, i interface{}) bool { return ø.Is(reflect.Slice, i) }}}",
    "String": "string_{meta{\"string\", func(ø meta, i interface{}) bool { return ø.Is(reflect.String, i) }}}",
    "Struct": "struct_{meta{\"struct\", func(ø meta, i interface{}) bool { return ø.Is(reflect.Struct, i) }}}",
    "Uint": "uint_{meta{\"uint\", func(ø meta, i interface{}) bool {\n\u0009return ø.Is(reflect.Uint, i) ||\n\u0009\u0009ø.Is(reflect.Uint8, i) ||\n\u0009\u0009ø.Is(reflect.Uint16, i) ||\n\u0009\u0009ø.Is(reflect.Uint32, i) ||\n\u0009\u0009ø.Is(reflect.Uint64, i)\n}}}",
    "init": ""
  },
  "Imports": {},
  "Path": "github.com/metakeule/meta"
}
